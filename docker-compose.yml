version: '3'

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000
  nginx:
    image: tron.proxy
    build:
      context: /home/flynn/Grid/
      dockerfile: Dockerfile.nginx
    container_name: tron.proxy
    restart: always
    ports:
      - 80:80
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - /home/flynn/Grid/plex:/config
      - /home/flynn/Grid/tv:/tv
      - /mnt/plex/:/movies
    restart: unless-stopped
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - AUTO_UPDATE=true
    volumes:
      - /home/flynn/Grid/jackett/config:/config
      - /home/flynn/Grid/jackett/dl:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /home/flynn/Grid/radarr:/config
      - /mnt/plex:/plex
    ports:
      - 7878:7878
    restart: always
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /home/flynn/Grid/sonarr:/config
    ports:
      - 8989:8989
    restart: unless-stopped
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /home/flynn/Grid/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
  indexarr:
    image: allergicduck/jackett-sync
    container_name: indexarr
    environment:
      - JACKETT_URL=http://192.168.4.151:9117
      - JACKETT_ALTURL=http://172.17.0.1:9117
      - JACKETT_KEY=g2au4tjjlfao86xt1falwa20o7qiq5ui

      - RADARR_URL=http://172.17.0.1:7878
      - RADARR_KEY=017d39dd07884a1e8de2555e469fefa0

      - SONARR_URL=http://172.17.0.1:8989
      - SONARR_KEY=155213f7769b49159b3a9bcfc858bef5

      # - LIDARR_URL=http://lidarr:8787
      # - LIDARR_KEY=yourApiKeyHere

      # - READARR_URL=http://readarr:8787
      # - READARR_KEY=yourApiKeyHere

      
    restart: unless-stopped
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: MCP.encom.local
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
  # mc:
  #   image: eclipse-temurin:17-alpine
  #   container_name: mc 
  #   ports:
  #     - 47491:47491
  #   restart: unless-stopped
  #   volumes:
  #     - /home/flynn/Grid/mcserver:/mcserver
  #   working_dir: /mcserver
  #   entrypoint: ["java", "-Xms10G", "-Xmx10G", "-XX:+UseG1GC", 
  #   "-XX:+ParallelRefProcEnabled", "-XX:MaxGCPauseMillis=200", 
  #   "-XX:+UnlockExperimentalVMOptions", "-XX:+DisableExplicitGC",
  #   "-XX:+AlwaysPreTouch", "-XX:G1NewSizePercent=30",
  #   "-XX:G1MaxNewSizePercent=40", "-XX:G1HeapRegionSize=8M",
  #   "-XX:G1ReservePercent=20", "-XX:G1HeapWastePercent=5",
  #   "-XX:G1MixedGCCountTarget=4", "-XX:InitiatingHeapOccupancyPercent=15",
  #   "-XX:G1MixedGCLiveThresholdPercent=90", "-XX:G1RSetUpdatingPauseTimePercent=5",
  #   "-XX:SurvivorRatio=32", "-XX:+PerfDisableSharedMem", "-XX:MaxTenuringThreshold=1",
  #   "-Daikars.new.flags=true", "-jar", "paper.jar", "--nogui"]

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
